#Dockerfile
FROM python:3.13.2 AS base

# Install additional dependencies and Poetry
ENV DOCKER_CONTAINER=true
ENV POETRY_HOME=/opt/poetry
ENV POETRY_VIRTUALENVS_CREATE=false
ENV PYTHONVERBOSE=true
RUN curl -sSL https://install.python-poetry.org | python3 -

# Add Poetry to PATH
ENV PATH="${POETRY_HOME}/bin:$PATH"

# Set up working directory
WORKDIR /app

# Copy project files for dependency installation
COPY pyproject.toml poetry.lock ./

RUN echo|pwd
RUN echo|ls -R

# Install dependencies (without AI group since it's not compatible with Python 3.13)
RUN poetry install --without ai --no-interaction

# Copy application code
COPY ../../source/ source/
COPY ../../airflow_dags/ airflow_dags/
COPY ../../micap_infra/ micap_infra/
ENV PYTHONPATH="${PYTHONPATH}:/app/source/micap_runtime/"

RUN echo|pwd
RUN echo|ls -R

# forward request and error logs to docker log collector
RUN ln -sf /proc/1/fd/1 /var/log/test.log

FROM base AS debugger
RUN poetry add debugpy
ENTRYPOINT [ "poetry", "run", "python", "-m", "debugpy",  ]


FROM base AS primary

ENTRYPOINT [ "poetry", "run", "python", "-m" ]
